---
- name: Gebe den Pfad der Vault-Datei aus
  debug:
    msg: "Der Pfad zur Vault-Datei ist: {{ vault_file }}"

- name: Prüfe, ob die Vault-Datei existiert
  stat:
    path: "{{ vault_file }}"
  register: vault_file_stat

- name: Eingabeaufforderung für Passwort zur Erstellung der Vault-Datei, falls sie nicht existiert
  when: not vault_file_stat.stat.exists
  block:
    - name: Prompt für Passwort
      ansible.builtin.debug:
        msg: "Bitte geben Sie das Passwort zur Erstellung der Vault-Datei ein:"

    - name: Passwort erfassen (geheim)
      ansible.builtin.pause:
        prompt: "Passwort: "
        echo: no
      register: vault_password

    - name: Erstelle unverschlüsselte Datei, um sie zu verschlüsseln
      copy:
        content: |
          # Hier kannst du initiale Inhalte einfügen, wenn gewünscht
          secret_key: "example_value"
        dest: "{{ vault_file }}.tmp"

    - name: Verschlüssle die Datei mit Ansible Vault
      command: >
        echo '{{ vault_password.user_input }}' | ansible-vault encrypt --vault-password-file=/dev/stdin {{ vault_file }}.tmp --output {{ vault_file }}

    - name: Lösche die temporäre Datei
      file:
        path: "{{ vault_file }}.tmp"
        state: absent

- name: Eingabeaufforderung für Passwort zur Entschlüsselung, falls die Datei existiert
  when: vault_file_stat.stat.exists
  block:
    - name: Prompt für Passwort zur Entschlüsselung
      ansible.builtin.debug:
        msg: "Bitte geben Sie das Passwort zum Öffnen der Vault-Datei ein:"

    - name: Passwort erfassen (geheim)
      ansible.builtin.pause:
        prompt: "Passwort: "
        echo: no
      register: vault_password

    - name: Vault-Datei entschlüsseln und bearbeiten
      shell: echo '{{ vault_password.user_input }}' | ansible-vault edit --vault-password-file=/dev/stdin {{ vault_file }}
